name: Prod CI/CD

on:
  push:
    branches:
      - 'master'


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Node.js Setup
        uses: actions/setup-node@v1
        with:
          node-version: '15.x'
      - name: Build
        run: |
          rustup default nightly
          cd client
          npm ci
          npm run check-typescript-types
          npm run lint
          npm test
          npm run build-prod
          cd ../server
          rustup component add rustfmt
          rustup component add clippy
          cargo fmt -- --check
          cargo clippy --all-targets --all-features -- -D warnings
          cargo test
  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build container image
        run: docker build -t registry.digitalocean.com/cards/satdash:$(echo $GITHUB_SHA | head -c7) .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cards/satdash:$(echo $GITHUB_SHA | head -c7)

      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/cards/satdash:'${TAG}'|' $GITHUB_WORKSPACE/deployment.yml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 cards

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/satdash